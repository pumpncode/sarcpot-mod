SMODS.Joker {
    key = "artemis",
    config = {
        extra = {
            suit = "Hearts",
            xmult_mod = 0.2,
            total_xmult = 0
        }
    },
    loc_vars = function(self, info_queue, card)
        return { vars = {card.ability.extra.xmult_mod, card.ability.extra.total_xmult } }
    end,
    rarity = 3,
    pos = { x = 3, y = 1 },
    atlas = 'sarcpot_atlas',
    cost = 8,
    unlocked = true,
    discovered = false,
    blueprint_compat = true,
    eternal_compat = true,
    soul_pos = nil,

    add_to_deck = function(self, card, from_debuff)
        for k, v in ipairs(G.playing_cards) do
            G.GAME.blind:debuff_card(v)
        end
    end,

    

    update = function(self, card, dt)
      
        if G.playing_cards then
            local total = 0

            for k, v in ipairs(G.playing_cards) do
                if v.debuff then
                    total = total + 1
                end
            end
            card.ability.extra.total_xmult = math.max(0, total * card.ability.extra.xmult_mod)
        end
    end,

    calculate = function(self, card, context)
        
        if context.joker_main then
            return {
                x_mult = card.ability.extra.total_xmult
            }
        end
    end
}

local debuff_card_ref = Blind.debuff_card
function Blind.debuff_card(self, card, from_blind)
  local ret = debuff_card_ref(self, card, from_blind)

  if card.area ~= G.jokers then
    for k, v in ipairs(SMODS.find_card('j_sarc_artemis')) do
      if card:is_suit(v.ability.extra.suit) then
        card:set_debuff(true)
        if card.debuff then card.debuffed_by_blind = true end
      end
    end
  end
end

